{"version":3,"sources":["Map.js","TempDrawer.js","Header.js","Card.js","Accordion.js","App.js","index.js"],"names":["Marker","props","Room","color","isOpen","Hall","SimpleMap","rows","this","markers","map","row","style","height","width","Component","useStyles","makeStyles","theme","list","padding","spacing","fullList","TemporaryDrawer","classes","React","useState","top","left","bottom","right","state","setState","toggleDrawer","anchor","open","event","type","key","className","clsx","role","onClick","onKeyDown","Typography","Link","href","target","Fragment","Button","Drawer","onClose","root","flexGrow","menuButton","marginRight","title","drawer","ButtonAppBar","AppBar","Toolbar","IconButton","Home","variant","GitHub","paper","CenteredGrid","mapProps","center","zoom","items","Courses","course","ListItem","button","ListItemText","primary","Paper","Map","startIcon","Check","Close","Open","Meal","List","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","SimpleAccordion","Accordion","AccordionSummary","expandIcon","AccordionDetails","children","columns","field","App","loading","a","axios","get","resp","data","id","console","log","autoHeight","pageSize","onRowClick","lat","lng","Grid","container","item","xs","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f3a8193.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { Room } from '@material-ui/icons';\n\nfunction Marker(props) {\n    return (\n        <div>\n            <Room\n                color={props.isOpen ? 'primary': 'secondary'}\n            />\n            {props.Hall}\n        </div>\n    );\n}\n\nclass SimpleMap extends Component {\n    render() {\n        const { rows } = this.props;\n        const markers = rows ? rows.map(row => (\n            <Marker {...row} />\n        )) : null;\n        \n        return (\n            // Important! Always set the container height explicitly\n            <div style={{ height: '222px', width: '99%' }}>\n                <GoogleMapReact {...this.props}>\n                    {markers}\n                </GoogleMapReact>\n            </div>\n        );\n    }\n}\n\n// SimpleMap.defaultProps = { bootstrapURLKeys };\n\nexport default SimpleMap;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { Typography, Link } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    list: {\n        width: 250,\n        padding: theme.spacing(2),\n    },\n    fullList: {\n        width: 'auto',\n    },\n}));\n\nexport default function TemporaryDrawer() {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <Typography>\n                The backend is a Python microservice deployed on Google Cloud Functions. Everytime you visit this page, the microservice uses lxml to scrape all Michigan Dining menus asynchornously and determines whether they're open. You can see the code\n                {' '}\n                <Link\n                    href='https://github.com/GeorgeFane/payoffmatrixsolver/blob/main/function/main.py'\n                    target='_blank'\n                >\n                    here\n                </Link>\n            </Typography>\n        </div>\n    );\n\n    return (\n        <div>\n            {['right'].map((anchor) => (\n                <React.Fragment key={anchor}>\n                    <Button\n                        color='inherit'\n                        onClick={toggleDrawer(anchor, true)}\n                    >\n                        About\n                    </Button>\n                    <Drawer\n                        anchor={anchor}\n                        open={state[anchor]}\n                        onClose={toggleDrawer(anchor, false)}\n                    >\n                        {list(anchor)}\n                    </Drawer>\n                </React.Fragment>\n            ))}\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport { GitHub, Home } from '@material-ui/icons';\nimport { Tooltip, Link, Drawer } from '@material-ui/core';\n\nimport TempDrawer from './TempDrawer';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    drawer: {\n        width: 222,\n    },\n}));\n\nexport default function ButtonAppBar() {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar>\n                <Toolbar>\n\n                    <IconButton\n                        color=\"inherit\"\n                        href='https://georgefane.github.io/'\n                    >\n                        <Home />\n                    </IconButton>\n\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Michigan Dining\n                    </Typography>\n\n                    <TempDrawer />\n\n                    <IconButton\n                        color=\"inherit\"\n                        href='https://github.com/GeorgeFane/mdining/tree/source'\n                        target='_blank'\n                    >\n                        <GitHub />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, Button, Paper, List, ListItem, ListItemText } from '@material-ui/core';\nimport { Check, Close } from '@material-ui/icons';\n\nimport Map from './Map';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n    },\n}));\n\nexport default function CenteredGrid(props) {\n    const classes = useStyles();\n    const { row } = props;\n\n    const center = row;\n    const zoom = 17;\n    const mapProps = { center, zoom };\n\n    const items = row.Courses.map(course => (\n        <ListItem button>\n            <ListItemText primary={course} />\n        </ListItem>\n    ));\n\n    return row.Hall ? (\n        <Paper className={classes.paper}>\n            <Map {...mapProps} />         \n\n            <Typography variant='h4'>\n                {row.Hall}\n            </Typography>\n            \n            <Button\n                startIcon={row.isOpen ? <Check /> : <Close />}\n            >\n                {row.Open} - {row.Close}, {row.Meal}\n            </Button>\n\n            <List>\n                {items}\n            </List>\n            \n        </Paper>\n    ) : (\n        <Typography>\n            Click a row\n        </Typography>\n    );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        fontWeight: theme.typography.fontWeightRegular,\n    },\n}));\n\nexport default function SimpleAccordion(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                >\n                    <Typography className={classes.heading}>\n                        All Dining Halls\n                    </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                    {props.children}\n                </AccordionDetails>\n            </Accordion>\n        </div>\n    );\n}\n","import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Grid, Typography, Toolbar, Box, Paper } from '@material-ui/core';\n\nimport axios from 'axios';\nimport Map from './Map';\nimport Header from './Header';\nimport Card from './Card';\nimport Accordion from './Accordion';\n\nconst url = 'https://us-central1-georgefane.cloudfunctions.net/mdining'\n\nconst width = 122;\nconst columns = [\n    { field: 'Hall', width },\n    { field: 'Meal', width },\n    { field: 'Open', width },\n    { field: 'Close', width },\n    { field: 'isOpen', type: 'boolean', width },\n];\n\nclass App extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            rows: [],\n            row: { Courses: [] },\n            loading: true,\n            Courses: [],\n        };\n    }\n\n    async componentDidMount() {\n        const resp = await axios.get(url);\n        const rows = resp.data.data.map( (row, id) => ({ id, ...row }) );\n        console.log(rows);\n        const loading = false;\n        this.setState({ rows, loading });\n    }\n\n    render () {\n        const { rows, row, loading, Courses } = this.state;\n        const data = {\n            rows, columns, loading, autoHeight: true, pageSize: 5,\n            onRowClick: data => {\n                const { row } = data;\n                this.setState({ row });\n            }\n        };\n\n        const lat = 42.28156557881266;\n        const lng = -83.72879591738906;\n        const center = { lat, lng };\n        const zoom = 12;\n        const mapProps = { center, zoom, rows };\n\n        return <div>\n            <Header />\n            <Toolbar />\n            <div>\n                <Grid container spacing={1}>\n                    <Grid item xs>\n                        <DataGrid {...data} />;\n                        <Accordion children={<Map {...mapProps} />} />\n                    </Grid>\n                    \n                    <Grid item xs>\n                        <Card row={row} />\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}